#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <arpa/inet.h>

#include <linux/if_ether.h>
#include <linux/ip.h>


#define BUF_SIZE	65536

int main(void)
{
	int sock_fd;
	struct sockaddr_in sa;
	int sa_size = sizeof(struct sockaddr_in), read_size = 0;
	char buffer[BUF_SIZE] = {0};

	memset(&sa, 0, sa_size);

	sock_fd = socket(AF_PACKET, SOCK_RAW, htons(ETH_P_ALL));
	if(sock_fd < 0)
	{
		perror("Can`t create socket\r\n");
		exit(1);
	}

	while(1)
	{
		read_size = recvfrom(sock_fd, buffer, BUF_SIZE, 0,(struct sockaddr *) &sa, &sa_size);

		switch(read_size)
		{
			case -1: /* error */
				perror("Recv failed\r\n");
				break;

			case 0:
				break;

			default:
				struct iphdr *ipaddr = ((struct iphdr *) (buffer + sizeof(struct ethhdr)));
				printf("protocol = %d \r\n", ipaddr->protocol);
				printf("saddr = %d, daddr = %d\r\n", ipaddr->saddr,ipaddr->daddr);

				break;
		}
		sleep(2);
	}
}
